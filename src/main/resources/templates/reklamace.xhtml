<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <link rel="stylesheet" href="/styll.css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Reklamace</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js" type="javascript"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js" type="text/javascript"></script>

    <script type="text/javascript">
        const url = "http://127.0.0.1:8080/";
        function submit() {
            document.getElementById("complaintS").value=" ";

            if(document.getElementById("addReklamace").checked==true){

                console.log("ok");
                addReklamace();

            }
            else{
                if (document.getElementById("editReklamace").checked==true){
                    console.log("ok");
                    editRekalamce();

                }
                else {
                    alert("vyrbat typ akce")
                }

            }

            read();

        };
        async function   addReklamace() {
            var kodReklamace = document.getElementById("kodReklamace").value;
            const popisReklamace = document.getElementById("popisReklamace").value;
            const datumVytvoreni = document.getElementById("datumVytvoreni").value;
            if((kodReklamace=="")||(popisReklamace=="")||(datumVytvoreni=="")){
                alert("nevpynena pole kodReklamace, popisReklamace a datumVytvoreni, ebo jedon znich")
            }
            else {
                var stav;
                if (document.getElementById("stavPrijato").checked == false) {
                    alert("nova reklamace musi mit stav prijato satav prenastaven")
                    stav = 1;

                } else {
                    stav = 1;
                }
                console.log(stav);

                var klient
                if (document.getElementById("klient1").checked == true) {
                    klient = 1;
                } else {
                    if (document.getElementById("klient2").checked == true) {
                        klient = 2;
                    } else {
                        if (document.getElementById("klient3").checked == true) {
                            klient = 3;
                        } else {
                            if(document.getElementById("klientPole").value==""){
                                klient = 0;
                            }
                            else {
                                klient=document.getElementById("klientPole").value;
                            }
                        }
                    }
                }
                if (klient == 0) {
                    alert("klinet nevybran")
                } else {


                    //const response = await axios.post('http://localhost:8080/novaRekalamace', data)
                    //const kodReklamace =response.data.kodReklamace;
                    //var axios = require('axios');
                    //var FormData = require('form-data');
                    var dataBody = new FormData();
                    dataBody.append('kodReklamace', kodReklamace);
                    dataBody.append('popisReklamace', popisReklamace);
                    dataBody.append('datumVytvorení', datumVytvoreni);
                    dataBody.append('client', klient);
                    dataBody.append('stavReklamace', stav);

                    var status="";
                    var config = {
                        method: 'post',
                        url: 'http://127.0.0.1:8080/novaRekalamace',
                        headers: {
                            //...dataBody.getHeaders()
                        },
                        data: dataBody
                    };

                    axios(config)
                        .then(function (response) {
                            //var statusText="ok-uzivatel vytvoren";
                            //status=status+statusText;
                            document.getElementById("status").disabled = false;
                            document.getElementById("status").value =response.data.toString();
                            document.getElementById("status").disabled = true;
                        })
                        .catch(function (error) {
                            console.log(error);
                            document.getElementById("status").disabled = false;
                            document.getElementById("status").value ="chyba";
                            document.getElementById("status").disabled = true;
                        })



                }
            }
        };
        async function editRekalamce() {


            var kodReklamace = document.getElementById("kodReklamace").value;
            var infoReklamace = document.getElementById("infoReklamace").value;
            var datumVyreseni = document.getElementById("datumVyreseni").value;
            if ((kodReklamace == "") || (infoReklamace == "") || (datumVyreseni == "")) {
                alert("musi se vyplnit následujcí pole kod reklamace, infromace o reklamaci a datum vyreseni");
            } else {
                var stav
                if(document.getElementById("stavVyrizeno").checked == true)
                {
                    stav=2;
                }
                else {
                    if(document.getElementById("stavZmitnuto").checked == true){
                        stav=3;
                    }
                    else {
                        alert("nevybran satv, nebo stav nastaven na prijato(u edatace raklamce nezle stav prijato");
                    }
                }
                var dataBody = new FormData();
                dataBody.append('kodReklamace', kodReklamace);
                dataBody.append('infoReklamace', infoReklamace);
                dataBody.append('datumVyreseni', datumVyreseni);
                dataBody.append('stavReklamace', stav);

                var config = {
                    method: 'post',
                    //url: 'http://localhost:8080/editRekalamace',
                    url: 'http://127.0.0.1:8080/editRekalamace',
                    headers: {
                        //...dataBody.getHeaders()
                    },
                    data: dataBody
                };

                axios(config)
                    .then(function (response) {
                        document.getElementById("status").disabled = false;
                        document.getElementById("status").value =response.data.toString();
                        document.getElementById("status").disabled = true;
                    })
                    .catch(function (error) {
                        console.log(error);
                        document.getElementById("status").disabled = false;
                        document.getElementById("status").value ="chyba";
                        document.getElementById("status").disabled = true;
                    });

            }


        }
        async function getReklamaceR() {
           let listCmplaint =[];
            var config = {
                method: 'get',
                //url: 'http://localhost:8080/reklamaceR',
                url: 'http://127.0.0.1:8080/reklamaceR',
                headers: {}
            };

            axios(config)
                .then(function (response) {
                    const rezults = response.data;

                    for (let i in rezults) {
                        let rezult = rezults[i];
                        //console.log(rezult);
                        var stringRezult1 = "kodReklamace:, " + rezult.codeCmplaint.toString() + ","+ " popsis:, " + rezult.deiscription.toString()+","+"datumVytvoreni:, "+rezult.criateDate.toString()+","+"infromaReklamace:, "+rezult.criateDate.toString()+",";
                        var stringRezult2="klinet:, "+rezult.client.toString()+", "+"zamestnanec:, "+rezult.employId.toString();

                        listCmplaint[i] = stringRezult1+stringRezult2;
                    }

                    listCmplaint.forEach(function(item) {
                        var li = document.createElement("li");
                        var text = document.createTextNode(item);
                        var buttonCopy=  document.createElement("button")
                        var pom=""
                        buttonCopy.innerHTML = "kopírovat";
                        buttonCopy.addEventListener ("click", function() {
                            const pomArray = item.split(",");
                           // console.log(pomArray[1].toString());
                            pom=pomArray[1];
                           // console.log(pom);
                            document.getElementById("kodReklamace").value=pom.toString();
                           // console.log(pom);
                        });


                        li.appendChild(text);
                        li.appendChild(buttonCopy);


                        document.getElementById("complaintR").appendChild(li);
                    });


                })
                .catch(function (error) {
                    console.log(error);
                });
        }
        async function getReklamaceA() {
            let listCmplaint =[];
            var config = {
                method: 'get',
                //url: 'http://localhost:8080/reklamace',
                url: 'http://127.0.0.1:8080/reklamaceA',
                headers: {}
            };

            axios(config)
                .then(function (response) {
                    const rezults = response.data;

                    for (let i in rezults) {
                        let rezult = rezults[i];
                        //console.log(rezult);
                        var stringRezult1 = "kodReklamace:, " + rezult.codeCmplaint.toString() + ","+ " popsis:, " + rezult.deiscription.toString()+","+"datumVytvoreni:, "+rezult.criateDate.toString()+","+"infromaReklamace:, "+rezult.criateDate.toString()+",";
                        var stringRezult2="klinet:, "+rezult.client.toString()+", "+"zamestnanec:, "+rezult.employId.toString();

                        listCmplaint[i] = stringRezult1+stringRezult2;
                    }

                    listCmplaint.forEach(function(item) {
                        var li = document.createElement("li");
                        var text = document.createTextNode(item);
                        var buttonCopy=  document.createElement("button")
                        var pom=""
                        buttonCopy.innerHTML = "kopírovat";
                        buttonCopy.addEventListener ("click", function() {
                            const pomArray = item.split(",");
                            // console.log(pomArray[1].toString());
                            pom=pomArray[1];
                            // console.log(pom);
                            document.getElementById("kodReklamace").value=pom.toString();
                            // console.log(pom);
                        });


                        li.appendChild(text);
                        li.appendChild(buttonCopy);


                        document.getElementById("complaintA").appendChild(li);
                    });


                })
                .catch(function (error) {
                    //console.log(error);
                });
        }
        async function getReklamaceS() {
            //document.getElementById("complaintS").replaceChild();
            let listCmplaint =[];
            var config = {
                method: 'get',
                //url: 'http://localhost:8080/reklamace',
                url: ""+url+"reklamaceS",
                headers: {}
            };

            axios(config)
                .then(function (response) {
                    const rezults = response.data;

                    for (let i in rezults) {
                        let rezult = rezults[i];
                        //console.log(rezult);
                        var stringRezult1 = "kodReklamace:, " + rezult.codeCmplaint.toString() + ","+ " popsis:, " + rezult.deiscription.toString()+","+"datumVytvoreni:, "+rezult.criateDate.toString()+","+"infromaReklamace:, "+rezult.criateDate.toString()+",";
                        var stringRezult2="klinet:, "+rezult.client.toString()+", "+"zamestnanec:, "+rezult.employId.toString();

                        listCmplaint[i] = stringRezult1+stringRezult2;
                    }

                    listCmplaint.forEach(function(item) {
                        var li = document.createElement("li");
                        var text = document.createTextNode(item);
                        var buttonCopy=  document.createElement("button")

                        buttonCopy.innerHTML = "kopírovat";
                        buttonCopy.addEventListener ("click", function() {
                            const pomArray = item.split(",");
                            // console.log(pomArray[1].toString());
                            // console.log(pom);
                            document.getElementById("kodReklamace").value=pomArray[1].toString();
                            // console.log(pom);
                        });


                        li.appendChild(text);
                        li.appendChild(buttonCopy);


                        document.getElementById("complaintS").appendChild(li);
                    });



                })
                .catch(function (error) {
                    //console.log(error);
                    return error;
                });
        }
        async function getClient(){
            let listClient =[];
            var config = {
                method: 'get',

                url: ""+ url+"klientList",
                headers: {}
            };

            axios(config)
                .then(function (response) {
                    const rezults = response.data;

                    for (let i in rezults) {
                        let rezult = rezults[i];

                        var stringRezult = "id:,"+rezult.idClient.toString()+",";
                        listClient[i] = stringRezult;

                    }

                    listClient.forEach(function(item) {
                        var li = document.createElement("li");
                        var text = document.createTextNode(item);
                        var buttonCopy=  document.createElement("button")

                        buttonCopy.innerHTML = "kopírovat";
                        buttonCopy.addEventListener ("click", function() {
                            const pomArray = item.split(",");

                            document.getElementById("klientPole").value=pomArray[1].toString();
                             console.log(pomArray[1].toString());
                        });


                        li.appendChild(text);
                        li.appendChild(buttonCopy);


                        document.getElementById("klientList").appendChild(li);
                    });



                })
                .catch(function (error) {
                    //console.log(error);
                    return error;
                });

        }
        async function read(){

            console.log(document.getElementById("complaintS").children.length);
            document.getElementById("complaintA").innerHTML = "";
            document.getElementById("complaintS").innerHTML = "";
            document.getElementById("complaintR").innerHTML = "";
            document.getElementById("klientList").innerHTML = "";

            getReklamaceA();
           getReklamaceR();
           getReklamaceS();
           getClient();


        }

        function submitR()
        {
            console.log("ok");
        }
        function copy(reklamace) {

            var reklamaceCopy = reklamace.getAttribute("data-reklamace-type");
            document.getElementById("kodReklamace").value=reklamaceCopy
        }



</script>


</head>
<body onload="read()">
<div class="form">
    <label>správa uživatelů</label>
    <br/>
    <label for="kodReklamace">kod reklamace:</label>
    <input type="text" id="kodReklamace" name="kodReklamace"/>
    <br/>
    <label for="popisReklamace">popis</label>
    <input type="text" id="popisReklamace" name="popisReklamace" />
    <br/>
    <label for="infoReklamace">infromace o reklamaci</label>
    <input type="text" id="infoReklamace" name="infoReklamace"/>
    <br/>
    <label for="datumVytvoreni">dastum vytvoreni</label>
    <input type="text" id="datumVytvoreni" name="datumVytvoreni"/>
    <br/>
    <label for="datumVyreseni">datum vyreseni:</label>
    <input type="text" id="datumVyreseni" name="datumVyreseni"/>
    <br/>
    <label>stav:</label>
    <br/>
    <label>prijato: </label>
    <input type="radio" id="stavPrijato" name="stavReklamace" class="stav" value="prijato"/>
    <label>vyrizeno: </label>
    <input type="radio" id="stavVyrizeno" name="stavReklamace" class="stav" value="vyrizeno"/>
    <label>zamitnuto:</label>
    <input type="radio" id="stavZmitnuto" name="stavReklamace" class="stav" value="zamitnuto"/>
    <br/>
    <label>typ akce:</label>
    <br/>
    <label>nova reklamace</label>
    <input type="radio" id="addReklamace" name="typAkce" class="typAkce" value="rkelamace"/>
    <label>uprava stavu reklamace</label>
    <input type="radio" id="editReklamace" name="typAkce"  class="typAkce" value="sklad"/>

    <br/>
    <label>klient:</label>
    <br/>
    <label>klient1</label>
    <input type="radio" id="klient1" name="klient" class="klient" value="1"/>
    <label>klient2</label>
    <input type="radio" id="klient2" name="klient"  class="klient" value="2"/>
    <label>klient3</label>
    <input type="radio" id="klient3" name="klient"  class="klient" value="3"/>
    <input type="text" id="klientPole" name="klientPole"/>
    <br/>
    <button onclick="submit()">ok</button>
    <button type="reset" id="delete" name="delete">vymaž</button>
    <a href="/logout">Odhlaseni</a>

    <br/>
    <input type="text" id="status" name="status" disabled="disabled"/>
</div>

<div class="vypisRekalamci">

    <button type="button" id="nactiReklamace" name="nactiReklamace" ondblclick="read()">ZobarazReklamace</button>
    <p>prijate:</p>

    <ul id="complaintA">
    </ul>
    <p>vyřízené:</p>
    <ul id="complaintS">
    </ul>

    <p>zamitnuté:</p>
    <ul id="complaintR">
    </ul>
    <p>klienti:</p>
    <ul id="klientList">
    </ul>


</div>

</body>
</html>